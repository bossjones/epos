compose:
  zookeeper:
    net: host
    image: bobrik/zookeeper
    environment:
      - ZK_CONFIG=tickTime=2000,initLimit=10,syncLimit=5,maxClientCnxns=128,forceSync=no,clientPort=2181
      - ZK_ID=1
  mesos-master:
    net: host
    image: mesosphere/mesos-master:0.28.1
    environment:
      - MESOS_ZK=zk://127.0.0.1:2181/mesos
      - MESOS_QUORUM=1
      - MESOS_CLUSTER=docker-compose
      - MESOS_REGISTRY=in_memory
  mesos-slave:
    net: host
    image: mesosphere/mesos-slave:0.28.1
    environment:
      - MESOS_MASTER=zk://127.0.0.1:2181/mesos
      - MESOS_CONTAINERIZERS=docker,mesos
      - MESOS_PORT=5051
      - MESOS_RESOURCES=cpus(*):1.5;ports(*):[11000-11999]
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup
      - /usr/local/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
  marathon:
    net: host
    image: mesosphere/marathon
    environment:
      - MARATHON_MASTER=zk://localhost:2181/mesos
  chronos:
    net: host
    image: mesosphere/chronos
    command: ["/usr/bin/chronos", --http_port, "4400", --master, "zk://localhost:2181/mesos", --zk_hosts, "localhost:2181"]
  hdfs:
    net: host
    image: dockmob/hadoop:2.7.1
    command: [-t, "pseudodistributed"]
  cassandra:
    net: host
    image: cassandra:3.2
    environment:
      - CASSANDRA_LISTEN_ADDRESS=127.0.0.1
      - CASSANDRA_RPC_ADDRESS=127.0.0.1
      - CASSANDRA_START_RPC=true


build:
  docker:
    image: docker:dind
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build -t lensa/epos .

  test:
    image: lensa/epos
    net: host
    environment:
      - MESOS_MASTER=zk://127.0.0.1:2181/mesos
      - ZOOKEEPER_HOST=127.0.0.1:2181
      - ZOOKEEPER_PATH=/usr/share/java
      - CASSANDRA_HOST=127.0.0.1:9042
      - MARATHON_HOST=localhost:8080
      - CHRONOS_HOST=localhost:4400
      - PYTHONPATH=/spark/python:/spark/python/lib/py4j-0.9-src.zip
    commands:
      - export HDFS_HOST=`hostname`:8020
      - pip install -e .[complete]
      - python setup.py test


publish:
  pypi:
    repository: https://pypi.python.org/pypi
    username: $$PYPI_USERNAME
    password: $$PYPI_PASSWORD
    distributions:
      - sdist
    when:
      event: [tag]
  docker:
    username: $$DOCKERHUB_USERNAME
    password: $$DOCKERHUB_PASSWORD
    email: $$DOCKERHUB_EMAIL
    repo: lensa/epos
    file: Dockerfile
    tag:
      - $$TAG
      - latest
    when:
      event: [tag]
